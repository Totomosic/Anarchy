# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/serverpch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -I../Bolt/Bolt-Core/vendor/GLFW/include -I../Bolt/Bolt-Core/vendor/Glad/include -I../Bolt/Bolt-Core/vendor/ImGui -I../Bolt/Bolt-Core/vendor/spdlog/include -I../Bolt/Bolt-Core/vendor/FreeType-GL -I../Bolt/Bolt-Core/vendor/FreeType/include -I../Bolt/Bolt-Core/vendor/Lua/src -I../Bolt -I../Bolt/Bolt-Core/src -I../Anarchy-Utils/src -I../Anarchy-ServerLib/src -Isrc
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux-x86_64/Anarchy-ServerHost
TARGET = $(TARGETDIR)/Anarchy-ServerHost
OBJDIR = ../bin-int/Debug-linux-x86_64/Anarchy-ServerHost
DEFINES += -DBLT_PLATFORM_LINUX -DBLT_BUILD_STATIC -D_CRT_SECURE_NO_WARNINGS -DBLT_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += ../bin/Debug-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
LIBS += ../bin/Debug-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/Bolt-Core/libBolt-Core.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/Lua/libLua.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/ImGui/libImGui.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/GLFW/libGLFW.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/Glad/libGlad.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/FreeType-GL/libFreeType-GL.a
LIBS += ../Bolt/bin/Debug-linux-x86_64/FreeType/libFreeType.a -lstdc++fs -ldl -lX11 -lpthread -lstdc++
LDDEPS += ../bin/Debug-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux-x86_64/Anarchy-ServerHost
TARGET = $(TARGETDIR)/Anarchy-ServerHost
OBJDIR = ../bin-int/Release-linux-x86_64/Anarchy-ServerHost
DEFINES += -DBLT_PLATFORM_LINUX -DBLT_BUILD_STATIC -D_CRT_SECURE_NO_WARNINGS -DBLT_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../bin/Release-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
LDDEPS += ../bin/Release-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-linux-x86_64/Anarchy-ServerHost
TARGET = $(TARGETDIR)/Anarchy-ServerHost
OBJDIR = ../bin-int/Dist-linux-x86_64/Anarchy-ServerHost
DEFINES += -DBLT_PLATFORM_LINUX -DBLT_BUILD_STATIC -D_CRT_SECURE_NO_WARNINGS -DBLT_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../bin/Dist-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
LDDEPS += ../bin/Dist-linux-x86_64/Anarchy-ServerLib/libAnarchy-ServerLib.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else
  $(error "invalid configuration $(config)")
endif

# Per File Configurations
# #############################################


# File sets
# #############################################

OBJECTS :=

OBJECTS += $(OBJDIR)/ClientConnection.o
OBJECTS += $(OBJDIR)/ConnectionsManager.o
OBJECTS += $(OBJDIR)/Server.o
OBJECTS += $(OBJDIR)/ServerEntityCollection.o
OBJECTS += $(OBJDIR)/ServerListener.o
OBJECTS += $(OBJDIR)/ServerSocket.o
OBJECTS += $(OBJDIR)/ServerState.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/serverpch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Anarchy-ServerHost
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Anarchy-ServerHost
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/ClientConnection.o: src/Connections/ClientConnection.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ConnectionsManager.o: src/Connections/ConnectionsManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ServerEntityCollection.o: src/Entities/ServerEntityCollection.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Server.o: src/Server.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ServerListener.o: src/ServerListener.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ServerSocket.o: src/ServerSocket.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ServerState.o: src/ServerState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/serverpch.o: src/serverpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif