# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  Resource_Converter_config = debug
  GLFW_config = debug
  Glad_config = debug
  ImGui_config = debug
  spdlog_config = debug
  FreeType_config = debug
  FreeType_GL_config = debug
  Lua_config = debug
  Bolt_Core_config = debug
  Anarchy_Utils_config = debug
  Anarchy_ServerLib_config = debug
  Anarchy_ServerHost_config = debug
  Anarchy_Client_config = debug

else ifeq ($(config),release)
  Resource_Converter_config = release
  GLFW_config = release
  Glad_config = release
  ImGui_config = release
  spdlog_config = release
  FreeType_config = release
  FreeType_GL_config = release
  Lua_config = release
  Bolt_Core_config = release
  Anarchy_Utils_config = release
  Anarchy_ServerLib_config = release
  Anarchy_ServerHost_config = release
  Anarchy_Client_config = release

else ifeq ($(config),dist)
  Resource_Converter_config = dist
  GLFW_config = dist
  Glad_config = dist
  ImGui_config = dist
  spdlog_config = dist
  FreeType_config = dist
  FreeType_GL_config = dist
  Lua_config = dist
  Bolt_Core_config = dist
  Anarchy_Utils_config = dist
  Anarchy_ServerLib_config = dist
  Anarchy_ServerHost_config = dist
  Anarchy_Client_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := Resource-Converter GLFW Glad ImGui spdlog FreeType FreeType-GL Lua Bolt-Core Anarchy-Utils Anarchy-ServerLib Anarchy-ServerHost Anarchy-Client

.PHONY: all clean help $(PROJECTS) Anarchy Bolt Bolt/Vendor Resources

all: $(PROJECTS)

Anarchy: Anarchy-Client Anarchy-ServerHost Anarchy-ServerLib Anarchy-Utils

Bolt: Bolt/Vendor Bolt-Core

Bolt/Vendor: FreeType FreeType-GL GLFW Glad ImGui Lua spdlog

Resources: Resource-Converter

Resource-Converter:
ifneq (,$(Resource_Converter_config))
	@echo "==== Building Resource-Converter ($(Resource_Converter_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Resources/Converter -f Makefile config=$(Resource_Converter_config)
endif

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/GLFW -f Makefile config=$(GLFW_config)
endif

Glad:
ifneq (,$(Glad_config))
	@echo "==== Building Glad ($(Glad_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/Glad -f Makefile config=$(Glad_config)
endif

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/ImGui -f Makefile config=$(ImGui_config)
endif

spdlog:
ifneq (,$(spdlog_config))
	@echo "==== Building spdlog ($(spdlog_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/spdlog -f Makefile config=$(spdlog_config)
endif

FreeType:
ifneq (,$(FreeType_config))
	@echo "==== Building FreeType ($(FreeType_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/FreeType -f Makefile config=$(FreeType_config)
endif

FreeType-GL:
ifneq (,$(FreeType_GL_config))
	@echo "==== Building FreeType-GL ($(FreeType_GL_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/FreeType-GL -f Makefile config=$(FreeType_GL_config)
endif

Lua:
ifneq (,$(Lua_config))
	@echo "==== Building Lua ($(Lua_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/Lua -f Makefile config=$(Lua_config)
endif

Bolt-Core: GLFW Glad ImGui FreeType FreeType-GL Lua
ifneq (,$(Bolt_Core_config))
	@echo "==== Building Bolt-Core ($(Bolt_Core_config)) ===="
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core -f Makefile config=$(Bolt_Core_config)
endif

Anarchy-Utils: Bolt-Core
ifneq (,$(Anarchy_Utils_config))
	@echo "==== Building Anarchy-Utils ($(Anarchy_Utils_config)) ===="
	@${MAKE} --no-print-directory -C Anarchy-Utils -f Makefile config=$(Anarchy_Utils_config)
endif

Anarchy-ServerLib: Anarchy-Utils
ifneq (,$(Anarchy_ServerLib_config))
	@echo "==== Building Anarchy-ServerLib ($(Anarchy_ServerLib_config)) ===="
	@${MAKE} --no-print-directory -C Anarchy-ServerLib -f Makefile config=$(Anarchy_ServerLib_config)
endif

Anarchy-ServerHost: Anarchy-ServerLib
ifneq (,$(Anarchy_ServerHost_config))
	@echo "==== Building Anarchy-ServerHost ($(Anarchy_ServerHost_config)) ===="
	@${MAKE} --no-print-directory -C Anarchy-ServerHost -f Makefile config=$(Anarchy_ServerHost_config)
endif

Anarchy-Client: Bolt-Core
ifneq (,$(Anarchy_Client_config))
	@echo "==== Building Anarchy-Client ($(Anarchy_Client_config)) ===="
	@${MAKE} --no-print-directory -C Anarchy-Client -f Makefile config=$(Anarchy_Client_config)
endif

clean:
	@${MAKE} --no-print-directory -C Bolt/Bolt-Resources/Converter -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/Glad -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/ImGui -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/spdlog -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/FreeType -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/FreeType-GL -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core/vendor/Lua -f Makefile clean
	@${MAKE} --no-print-directory -C Bolt/Bolt-Core -f Makefile clean
	@${MAKE} --no-print-directory -C Anarchy-Utils -f Makefile clean
	@${MAKE} --no-print-directory -C Anarchy-ServerLib -f Makefile clean
	@${MAKE} --no-print-directory -C Anarchy-ServerHost -f Makefile clean
	@${MAKE} --no-print-directory -C Anarchy-Client -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   Resource-Converter"
	@echo "   GLFW"
	@echo "   Glad"
	@echo "   ImGui"
	@echo "   spdlog"
	@echo "   FreeType"
	@echo "   FreeType-GL"
	@echo "   Lua"
	@echo "   Bolt-Core"
	@echo "   Anarchy-Utils"
	@echo "   Anarchy-ServerLib"
	@echo "   Anarchy-ServerHost"
	@echo "   Anarchy-Client"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"